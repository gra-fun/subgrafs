// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

        //ивент который тригерится при создании токенсейла
        //на 1 токен может быть запущен только 1 токенсейл
        event TokenSaleCreated (
                address token, //адрес токена
                string name, //название токена
                string symbol, //символ токена
                string metadata, //IPFS CID json файла гдде хранится метадата токенсейла
                string url, //IPFS CID файла с логотипом токена
                address referralLink // адрес реферала который пригласил пользователя на платформу
        );


        //ивент который тригерится при создании токенсейла
        //содержит дополнительные параметры токенсейла
        event TokenSaleConfig (
                address token, //адрес токена
                bool withDao, // создавать ли дао после токенсейла (мо умолчанию true)
                uint256 finishingTime, // время окончания токенсейла после которого покупать токены нельзя если 0 то время не ограничено (по умолчанию 0)
                uint256 maxWalletAmount, //% токенов от тотал саплая который может купить 1 кошелек (проверяем по балансу на кошельке) мин 0*10^25 макс 80*10^25 (если откулючен передаем 80*10^25)
                uint256 vTokenBalance, //Текущий виртуальный баланс токенов в токенсейле
                uint256 vBNBBalance //Текущий виртуальный баланс BNB  в токенсейле
        );

        //ивент который тригерится при заливке ликвидности на панкейк по окончанию токенсейла
        event TokenSaleFinished (
                address token,  //адрес токена
                address dao,  //адрес DAO
                uint256 tokenReserve,  //сколько токенов залили в качесттве ликвидности на декс
                uint256 bnbReserve,  //сколько BNB залили в качесттве ликвидности на декс
                uint256 sentToDao //сколько токенов отправили в ДАО
        );

        //ивент который тригерится при покупке или продаже токенов содержащий информацию о самой операции
        event Swap(
                address indexed user, //адрес пользователя который покупает или продает токены
                address indexed referrer, //адрес реферера данного пользователя
                address indexed token, //адрес токена который покупается
                bool isBuy, //направление транзакции если true занчит покупка если false значит продажа
                uint256 bnbAmount, //количество BNB за вычетом комисии в 1% на которые пользователь покупает токены или количество BNB без вычета комисии которые он получет после продажи токенов
                uint256 tokenAmount, //количество токенов которые пользователь продает или получит после покупки без вычета комисии дао
                uint256 bnbFee, //размер комисии в BNB которая снимается с пользователя
                uint256 daoFee //комисия в токенах на дао (снимается только при покупке) при продаже равно 0
        );


        event Swap(
                address indexed user, //0xed9aa328eaa8f8bdf6f68cf707ddcf0f180cf531 //адрес пользователя который покупает или продает токены
                address indexed referrer, //000000000000000000000000000000000000000 //адрес реферера данного пользователя
                address indexed token, //0x84af8fb77fbe1647013915d4472c590b3f0f1054//адрес токена который покупается
                bool isBuy, //1//направление транзакции если true занчит покупка если false значит продажа
                uint256 bnbAmount, //1039005000000000000 //количество BNB за вычетом комисии в 1% на которые пользователь покупает токены или количество BNB без вычета комисии которые он получет после продажи токенов
                uint256 tokenAmount, //118216453398308454711312600 //количество токенов которые пользователь продает или получит после покупки без вычета комисии дао
                uint256 bnbFee, //10495000000000000//размер комисии в BNB которая снимается с пользователя
                uint256 daoFee //70533654341684719678441358 //комисия в токенах на дао (снимается только при покупке) при продаже равно 0
        );


        //ивент который тригерится при покупке или продаже токенов содержащий дополнительную информацию
        //которая будет использоватся для трекинга состояния самого токенсейла и сбора статистики
        event Sync(
                address token, //0x84af8fb77fbe1647013915d4472c590b3f0f1054//адрес токена
                uint256 startPrice, //77500000000000000//цена токена в пуле до соверщения покупки или продажи
                uint256 endPrice, //99673043729064516//цена токена в пуле после соверщения покупки или продажи
                uint256 bnbAmount, //1039005000000000000//количество BNB за вычетом комисии в 1% на которые пользователь покупает токены или количество BNB без вычета комисии которые он получет после продажи токенов
                uint256 tokenAmount, //118216453398308454711312600//количество токенов которые пользователь продает или получит после покупки без вычета комисии дао
                uint256 bnbReserve, //1039005000000000000//виртуальный резерв BNB в токенсейле после окончания покупки или продажи
                uint256 tokenReserve //681783546601691545288687400//виртуальный резерв токенов в токенсейле после окончания покупки или продажи
        );

        event Redeem(address token, uint256 tokenAmount, uint256 wethAmount);